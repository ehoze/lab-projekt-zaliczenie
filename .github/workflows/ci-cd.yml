name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test i Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16, 18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run tests with coverage
        if: matrix.node-version == '18'
        run: npm run test:coverage

      - name: Upload coverage reports
        if: matrix.node-version == '18'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

  docker:
    name: Docker Build
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t lab-projekt:${{ github.sha }} .

      - name: Test Docker image
        run: |
          docker run -d -p 3000:3000 --name test-container lab-projekt:${{ github.sha }}
          sleep 10
          curl -f http://localhost:3000/health || exit 1
          docker stop test-container
          docker rm test-container

  deploy:
    name: Deploy
    needs: [test, docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: echo "Application built successfully"
        
      - name: Health check
        run: |
          npm start &
          SERVER_PID=$!
          sleep 10
          curl -f http://localhost:3000/health || exit 1
          kill $SERVER_PID 